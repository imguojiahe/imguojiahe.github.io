<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Kevin Guo 的博客</title>
    <link>https://imguojiahe.github.io/</link>
    
    <atom:link href="https://imguojiahe.github.io/rss2.xml" rel="self" type="application/rss+xml"/>
    
    <description>给时光以生命, 给岁月以文明。</description>
    <pubDate>Fri, 06 May 2022 08:43:10 GMT</pubDate>
    <generator>http://hexo.io/</generator>
    
    <item>
      <title>最长公共串题解</title>
      <link>https://imguojiahe.github.io/2022/05/06/%E6%9C%80%E9%95%BF%E5%85%AC%E5%85%B1%E4%B8%B2%E9%A2%98%E8%A7%A3/</link>
      <guid>https://imguojiahe.github.io/2022/05/06/%E6%9C%80%E9%95%BF%E5%85%AC%E5%85%B1%E4%B8%B2%E9%A2%98%E8%A7%A3/</guid>
      <pubDate>Fri, 06 May 2022 08:31:54 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;&lt;img src=&quot;https://i.imgur.com/YjJEjqE.png&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;题目&quot;&gt;&lt;a href=&quot;#题目&quot; class=&quot;headerlink&quot; title=&quot;题目&quot;&gt;&lt;/a&gt;题目&lt;/h2&gt;&lt;h3 id=&quot;题目描述&quot;&gt;&lt;a href=</description>
        
      
      
      
      <content:encoded><![CDATA[<p><img src="https://i.imgur.com/YjJEjqE.png"></p><h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h2><h3 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h3><p>给定一颗 $n$ 个点的树，每个点 $i$ 上都有一个字符串 $s_i$，求所有两点间简单路径 $x,y(x &lt; y)$ 的个数，满足 $|lcp(s_{p_1} , s_{p_2} , \dots , s_{p_t})| \geq k$ ，其中 $lcp$ 为最长公共前缀， $p_1,\dots,p_t$ 为简单路径上所有经过的点</p><h3 id="输入格式"><a href="#输入格式" class="headerlink" title="输入格式"></a>输入格式</h3><p>第一行两个正整数 $n, k$</p><p>接下来的 $n$ 行每行一个字符串，其中第 $i$ 行的字符串是 $s_i$，字符集为 $0$ 到 $9$ 的数字</p><p>接下来的 n-1<em>n</em>−1 行每行两个正整数 $x, y$ ，代表一条树边</p><h3 id="输出格式"><a href="#输出格式" class="headerlink" title="输出格式"></a>输出格式</h3><p>输出一个正整数，代表答案</p><h3 id="样例"><a href="#样例" class="headerlink" title="样例"></a>样例</h3><h5 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">6 1</span><br><span class="line">1</span><br><span class="line">1</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">1</span><br><span class="line">4</span><br><span class="line">1 2</span><br><span class="line">2 5</span><br><span class="line">3 2</span><br><span class="line">1 4</span><br><span class="line">4 6</span><br></pre></td></tr></table></figure><h5 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">3</span><br></pre></td></tr></table></figure><h3 id="提示"><a href="#提示" class="headerlink" title="提示"></a>提示</h3><h5 id="【样例解释】"><a href="#【样例解释】" class="headerlink" title="【样例解释】"></a>【样例解释】</h5><p>满足条件的路径仅有 $(1,2),(1,5),(2,5)$ </p><h5 id="【数据范围】"><a href="#【数据范围】" class="headerlink" title="【数据范围】"></a>【数据范围】</h5><table><thead><tr><th>subtask 编号</th><th>$n$</th><th>$\sum s_i$</th><th>特殊性质</th><th>分数</th></tr></thead><tbody><tr><td>1</td><td>$\leq 638$</td><td>$\leq 10^5$</td><td>无</td><td>$10$</td></tr><tr><td>2</td><td>$\leq 2000$</td><td>$\leq 10^5$</td><td>无</td><td>$10$</td></tr><tr><td>3</td><td>$\leq 10^5$</td><td>$\leq 3\times 10^6≤3×106$</td><td>无</td><td>$20$</td></tr><tr><td>4</td><td>$\leq 10^5$</td><td>$\leq 3\times 10^6$</td><td>保证树为链</td><td>$20$</td></tr><tr><td>5</td><td>$\leq 10^6$</td><td>$\leq 5\times 10^6$</td><td>任意两字符串公共前缀 $&lt; k$</td><td>$10$</td></tr><tr><td>6</td><td>$\leq 10^6$</td><td>$\leq 5\times 10^6$</td><td>无</td><td>$30$</td></tr></tbody></table><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>由于题目要求树上简单路径的元素的公共前缀长度至少为 $k$ 的路径个数，所以可以只看每个字符串的前 $k$ 位，如果某个字符串的长度小于 $k$ 则直接排除，在计算时不算这个点</p><p>使用 <code>vector</code> 存边，<code>vector[i]</code> 里面存的是与点 $i$ 相连的所有点。</p><p>计算有多少条路径满足条件时，使用 <code>dfs</code> 搜索，记录某个节点的父亲节点和这个节点的编号，并搜索该节点的所有儿子节点</p><p>然后推导计算某个节点有多少种方案，式子如下图：</p><p><img src="C:\Users\1\AppData\Roaming\Typora\typora-user-images\image-20220504215447041.png" alt="图1"></p><p>最终把所有答案累计求和，输出</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">long</span> <span class="type">long</span> P1 = <span class="number">2147483647</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">long</span> <span class="type">long</span> P2 = <span class="number">1437356741</span>;</span><br><span class="line"><span class="function"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt; <span class="keyword">inline</span> <span class="type">void</span> <span class="title">read</span><span class="params">(T &amp;x)</span></span>&#123;</span><br><span class="line">T a = (T)<span class="number">0</span>, b = (T)<span class="number">1</span>;</span><br><span class="line"><span class="type">char</span> ch = <span class="string">&#x27; &#x27;</span>;</span><br><span class="line"><span class="keyword">while</span>(ch != <span class="string">&#x27;-&#x27;</span> &amp;&amp; (ch &lt; <span class="string">&#x27;0&#x27;</span> || ch &gt; <span class="string">&#x27;9&#x27;</span>))&#123;</span><br><span class="line">ch = <span class="built_in">getchar</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(ch == <span class="string">&#x27;-&#x27;</span>)&#123;</span><br><span class="line">b = <span class="number">-1</span>;</span><br><span class="line">ch = <span class="built_in">getchar</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span>(ch &gt;= <span class="string">&#x27;0&#x27;</span> &amp;&amp; ch &lt;= <span class="string">&#x27;9&#x27;</span>)&#123;</span><br><span class="line">a = ((T)a &lt;&lt; <span class="number">3</span>) + ((T)a &lt;&lt; <span class="number">1</span>) + (ch ^ <span class="string">&#x27;0&#x27;</span>);</span><br><span class="line">ch = <span class="built_in">getchar</span>();</span><br><span class="line">&#125;</span><br><span class="line">x = a * b;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">template</span>&lt;<span class="keyword">typename</span> T&gt; <span class="keyword">inline</span> <span class="type">void</span> <span class="title">write</span><span class="params">(T x, <span class="type">char</span> c = <span class="string">&#x27;\0&#x27;</span>)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span>(x &lt; (T)<span class="number">0</span>)&#123;</span><br><span class="line"><span class="built_in">putchar</span>(<span class="string">&#x27;-&#x27;</span>);</span><br><span class="line">x = -x;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(x &gt; (T)<span class="number">9</span>)&#123;</span><br><span class="line"><span class="built_in">write</span>(x / (T)<span class="number">10</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">putchar</span>(x % (T)<span class="number">10</span> + <span class="string">&#x27;0&#x27;</span>);</span><br><span class="line"><span class="keyword">if</span>(c != <span class="string">&#x27;\0&#x27;</span>)&#123;</span><br><span class="line"><span class="built_in">putchar</span>(c);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> NR = <span class="number">1e6</span>;</span><br><span class="line"><span class="type">long</span> <span class="type">long</span> a[NR + <span class="number">10</span>];</span><br><span class="line"><span class="type">char</span> s[NR + <span class="number">10</span>];</span><br><span class="line"><span class="comment">//字符串哈希函数</span></span><br><span class="line"><span class="function"><span class="type">long</span> <span class="type">long</span> <span class="title">Hash_s</span><span class="params">(<span class="type">int</span> k)</span></span>&#123;</span><br><span class="line">    <span class="type">long</span> <span class="type">long</span> ret1 = <span class="number">0</span>;</span><br><span class="line">    <span class="type">long</span> <span class="type">long</span> ret2 = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>;i &lt;= k;i++)&#123;</span><br><span class="line">        ret1 = (ret1 * <span class="number">10949ll</span> + <span class="number">17ll</span> * s[i]) % P1;</span><br><span class="line">        ret2 = (ret2 * <span class="number">21911ll</span> + <span class="number">37ll</span> * s[i]) % P2;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ret1 &lt;&lt; <span class="number">30</span> | ret2;</span><br><span class="line">&#125;</span><br><span class="line">vector&lt;<span class="type">int</span>&gt; v[NR + <span class="number">10</span>];</span><br><span class="line"><span class="type">long</span> <span class="type">long</span> sum = <span class="number">0</span>;</span><br><span class="line"><span class="type">long</span> <span class="type">long</span> b[NR + <span class="number">10</span>];</span><br><span class="line"><span class="comment">//搜索函数</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">dfs</span><span class="params">(<span class="type">int</span> x, <span class="type">int</span> fa)</span></span>&#123;</span><br><span class="line">    <span class="comment">//搜索其所有的子节点</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">auto</span> i : v[x])&#123;</span><br><span class="line">        <span class="keyword">if</span>(i != fa) <span class="built_in">dfs</span>(i, x);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//如果该字符串的长度不合法，结束</span></span><br><span class="line">    <span class="keyword">if</span>(a[x] == <span class="number">0</span>) <span class="keyword">return</span> ;</span><br><span class="line">    <span class="comment">//求该点的值</span></span><br><span class="line">    <span class="comment">//分开成两个变量统计</span></span><br><span class="line">    <span class="type">long</span> <span class="type">long</span> ret1 = <span class="number">0</span>, ret2 = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">auto</span> i : v[x]) <span class="keyword">if</span>(i != fa)&#123;<span class="comment">//不走回头路</span></span><br><span class="line">        <span class="comment">//前缀要相等</span></span><br><span class="line">        <span class="keyword">if</span>(a[i] != a[x])&#123;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//计算</span></span><br><span class="line">        ret1 += <span class="number">1ll</span> * b[i];</span><br><span class="line">        ret2 += <span class="number">1ll</span> * b[i] * b[i];</span><br><span class="line">        b[x] += b[i];</span><br><span class="line">    &#125;</span><br><span class="line">    sum += ret1;</span><br><span class="line">    sum += (ret1 * ret1 - ret2) / <span class="number">2</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="comment">//读入</span></span><br><span class="line">    <span class="type">int</span> n, k;</span><br><span class="line">    <span class="built_in">read</span>(n);</span><br><span class="line">    <span class="built_in">read</span>(k);</span><br><span class="line">    <span class="type">int</span> cnt = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>;i &lt;= n;i++)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, s + <span class="number">1</span>);</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">strlen</span>(s + <span class="number">1</span>) &gt;= k) a[i] = <span class="built_in">Hash_s</span>(k);<span class="comment">//对字符串哈希，使其更好处理</span></span><br><span class="line">        <span class="keyword">else</span> cnt++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>;i &lt; n;i++)&#123;</span><br><span class="line">        <span class="type">int</span> l, r;</span><br><span class="line">        <span class="built_in">read</span>(l);</span><br><span class="line">        <span class="built_in">read</span>(r);</span><br><span class="line">        v[l].<span class="built_in">emplace_back</span>(r);</span><br><span class="line">        v[r].<span class="built_in">emplace_back</span>(l);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//特判</span></span><br><span class="line">    <span class="keyword">if</span>(cnt == n)&#123;</span><br><span class="line">        <span class="built_in">write</span>(<span class="number">0</span>, <span class="string">&#x27;\n&#x27;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//初始化每个点有的方案个数</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>;i &lt;= n;i++)&#123;</span><br><span class="line">        b[i] = <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//搜索</span></span><br><span class="line">    <span class="built_in">dfs</span>(<span class="number">1</span>, <span class="number">-1</span>);</span><br><span class="line">    <span class="comment">//输出</span></span><br><span class="line">    <span class="built_in">write</span>(sum, <span class="string">&#x27;\n&#x27;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content:encoded>
      
      
      <category domain="https://imguojiahe.github.io/categories/%E7%BC%96%E7%A8%8B%E9%A2%98%E8%A7%A3/">编程题解</category>
      
      <category domain="https://imguojiahe.github.io/categories/%E7%BC%96%E7%A8%8B%E9%A2%98%E8%A7%A3/%E5%8E%9F%E5%88%9B%E9%A2%98%E7%9B%AE/">原创题目</category>
      
      
      <category domain="https://imguojiahe.github.io/tags/%E9%A2%98%E8%A7%A3/">题解</category>
      
      
      <comments>https://imguojiahe.github.io/2022/05/06/%E6%9C%80%E9%95%BF%E5%85%AC%E5%85%B1%E4%B8%B2%E9%A2%98%E8%A7%A3/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title></title>
      <link>https://imguojiahe.github.io/2022/05/06/text/</link>
      <guid>https://imguojiahe.github.io/2022/05/06/text/</guid>
      <pubDate>Fri, 06 May 2022 06:19:12 GMT</pubDate>
      
        
        
      <description>&lt;style&gt;@keyframes gradientBG{0%{background-position: 0% 50%;}50%{background-position: 100% 50%;}100% {background-position: 0% 50%;}}#rightsi</description>
        
      
      
      
      <content:encoded><![CDATA[<style>@keyframes gradientBG{0%{background-position: 0% 50%;}50%{background-position: 100% 50%;}100% {background-position: 0% 50%;}}#rightside{display:none;}</style><blockquote><p>这个页面是用来测试渐变背景的效果，以及不同透明度的效果。如果你有能力可以直接看 css 样式。否则请返回<a href="https://www.antmoe.com/posts/7198453/index.html#%E9%99%84%E5%BD%95">Hexo 博客之 butterfly 主题优化更换背景</a>复制代码。<br>阅读体验及个标签样式请自己进行调整。</p></blockquote><h2 id="透明度调节"><a href="#透明度调节" class="headerlink" title="透明度调节"></a>透明度调节</h2><center style='margin-bottom:20px' id = 'opt'><a style="color: #FFF;margin-bottom: 10px;"  style="color: #FFF;" href="#" class="button button-primary button-rounded button-small" data-opacity="0">透明度0</a><a style="color: #FFF;margin-bottom: 10px;"  style="color: #FFF;" href="#" class="button button-primary button-rounded button-small" data-opacity="0.1">透明度0.1</a><a style="color: #FFF;margin-bottom: 10px;"  style="color: #FFF;" href="#" class="button button-primary button-rounded button-small" data-opacity="0.2">透明度0.2</a><a style="color: #FFF;margin-bottom: 10px;"  style="color: #FFF;" href="#" class="button button-primary button-rounded button-small" data-opacity="0.3">透明度0.3</a><a style="color: #FFF;margin-bottom: 10px;"  style="color: #FFF;" href="#" class="button button-primary button-rounded button-small" data-opacity="0.4">透明度0.4</a><a style="color: #FFF;margin-bottom: 10px;"  style="color: #FFF;" href="#" class="button button-primary button-rounded button-small" data-opacity="0.5">透明度0.5</a><a style="color: #FFF;margin-bottom: 10px;"  style="color: #FFF;" href="#" class="button button-primary button-rounded button-small" data-opacity="0.6">透明度0.6</a><a style="color: #FFF;margin-bottom: 10px;"  style="color: #FFF;" href="#" class="button button-primary button-rounded button-small" data-opacity="0.7">透明度0.7</a><a style="color: #FFF;margin-bottom: 10px;"  style="color: #FFF;" href="#" class="button button-primary button-rounded button-small" data-opacity="0.8">透明度0.8</a><a style="color: #FFF;margin-bottom: 10px;"  style="color: #FFF;" href="#" class="button button-primary button-rounded button-small" data-opacity="0.9">透明度0.9</a><a style="color: #FFF;margin-bottom: 10px;"  style="color: #FFF;" href="#" class="button button-primary button-rounded button-small" data-opacity="1">透明度1</a></center><h2 id="背景调节"><a href="#背景调节" class="headerlink" title="背景调节"></a>背景调节</h2><div id='demo_style' style='text-align:center;margin:0 auto;'><h3 id="渐变类"><a href="#渐变类" class="headerlink" title="渐变类"></a>渐变类</h3><div data-type="photo" class='bg_test' style="display:inline-block;width: 200px;height:200px;background: url(&quot;https://ae01.alicdn.com/kf/H5662031fbf344418aa2c8bf74c68826eV.png&quot;),linear-gradient(45deg, #6dd0f2 15%, #f59abe 85%);text-align: center;line-height: 200px;margin-bottom:5px;cursor: pointer;">粉蓝色有图片</div><div data-type="photo" class='bg_test' style="display:inline-block;width: 200px;height:200px;background: linear-gradient(45deg, #6dd0f2 15%, #f59abe 85%);text-align: center;line-height: 200px;cursor: pointer;">粉蓝色无图片</div><div data-type="photo" class='bg_test' style="display:inline-block;width: 200px;height:200px;background: linear-gradient(102.7deg,#fddaff 8.2%,#dfadfc 19.6%,#adcdfc 36.8%,#adfcf4 73.2%,#caf8d0 90.9%);text-align: center;line-height: 200px;cursor: pointer;">美美哒渐变</div><div data-type="color" class='bg_test' style="display:inline-block;width: 200px;height:200px; background: linear-gradient(90deg,rgba(247,149,51,.1) 0,rgba(243,112,85,.1) 15%,rgba(239,78,123,.1) 30%,rgba(161,102,171,.1) 44%,rgba(80,115,184,.1) 58%,rgba(16,152,173,.1) 72%,rgba(7,179,155,.1) 86%,rgba(109,186,130,.1) 100%);text-align: center;line-height: 200px;cursor: pointer;">粉</div><div data-type="photo" class='bg_test' style="display:inline-block;width: 200px;height:200px; background: linear-gradient(-45deg, #ee7752, #e73c7e, #23a6d5, #23d5ab);    background-size: 400% 400%;animation: gradientBG 15s ease infinite;text-align: center;line-height: 200px;cursor: pointer;">动态渐变</div><div data-type="photo" class='bg_test' style="display:inline-block;width: 200px;height:200px; background: linear-gradient(to right bottom, rgb(0, 255, 240), rgb(92, 159, 247) 40%, rgb(211, 34, 255) 80%);text-align: center;line-height: 200px;cursor: pointer;">紫蓝色渐变</div><h3 id="渐变加图片类"><a href="#渐变加图片类" class="headerlink" title="渐变加图片类"></a>渐变加图片类</h3><div data-type="photo" class='bg_test' style="display:inline-block;width: 200px;height:200px; background: linear-gradient(60deg, rgba(255, 165, 150, 0.5) 5%, rgba(0, 228, 255, 0.35)), url(https://ae01.alicdn.com/kf/H18a4b998752a4ae68b8e85d432a5aef0l.png),url(https://ae01.alicdn.com/kf/H21b5f6b8496141a1979a33666e1074d9x.jpg)0% 0% / cover;text-align: center;line-height: 200px;cursor: pointer; background-size: cover;">紫蓝色渐变</div><h3 id="图片类"><a href="#图片类" class="headerlink" title="图片类"></a>图片类</h3><div data-type="photo" class='bg_test' style="display:inline-block;width: 200px;height:200px; background: url(https://api.abcyun.co/api/tool/bing/token/5d8f31cf6a8ab);text-align: center;line-height: 200px;cursor: pointer; background-size: cover;">必应壁纸</div><div data-type="photo" class='bg_test' style="display:inline-block;width: 200px;height:200px; background: url(https://api.abcyun.co/api/others/randacgimage/token/5d8f31cf6a8ab);text-align: center;line-height: 200px;cursor: pointer; background-size: cover;">随机二次元图</div><div data-type="photo" class='bg_test' style="display:inline-block;width: 200px;height:200px; background: url(https://api.abcyun.co/api/others/randacgblogbg/token/5d8f31cf6a8ab);text-align: center;line-height: 200px;cursor: pointer; background-size: cover;">随机二次元背景图</div></div><h2 id="测试文章"><a href="#测试文章" class="headerlink" title="测试文章"></a>测试文章</h2><h3 id="春"><a href="#春" class="headerlink" title="春"></a>春</h3><p>盼望着，盼望着，东风来了，春天的脚步近了。</p><p>一切都像刚睡醒的样子，欣欣然张开了眼。山朗润起来了，水长起来了，太阳的脸红起来了。</p><p>小草偷偷地从土里钻出来，嫩嫩的，绿绿的。园子里，田野里，瞧去，一大片一大片满是的。坐着，躺着，打两个滚，踢几脚球，赛几趟跑，捉几回迷藏。风轻悄悄的，草绵软软的。</p><p>桃树、杏树、梨树，你不让我，我不让你，都开满了花赶趟儿。红的像火，粉的像霞，白的像雪。花里带着甜味，闭了眼，树上仿佛已经满是桃儿、杏儿、梨儿。花下成千成百的蜜蜂嗡嗡地闹着，大小的蝴蝶飞来飞去。野花遍地是：杂样儿，有名字的，没名字的，散在花丛里，像眼睛，像星星，还眨呀眨的。</p><p>“吹面不寒杨柳风”，不错的，像母亲的手抚摸着你。风里带来些新翻的泥土的气息，混着青草味，还有各种花的香，都在微微润湿的空气里酝酿。鸟儿将窠巢安在繁花嫩叶当中，高兴起来了，呼朋引伴地卖弄清脆的喉咙，唱出宛转的曲子，与轻风流水应和着。牛背上牧童的短笛，这时候也成天在嘹亮地响。</p><p>雨是最寻常的，一下就是三两天。可别恼。看，像牛毛，像花针，像细丝，密密地斜织着，人家屋顶上全笼着一层薄烟。树叶子却绿得发亮，小草也青得逼你的眼。傍晚时候，上灯了，一点点黄晕的光，烘托出一片这安静而和平的夜。乡下去，小路上，石桥边，撑起伞慢慢走着的人;还有地里工作的农夫，披着蓑，戴着笠的。他们的草屋，稀稀疏疏的在雨里静默着。</p><p>天上风筝渐渐多了，地上孩子也多了。城里乡下，家家户户，老老小小，他们也赶趟儿似的，一个个都出来了。舒活舒活筋骨，抖擞抖擞精神，各做各的一份事去，“一年之计在于春”;刚起头儿，有的是工夫，有的是希望。</p><p>春天像刚落地的娃娃，从头到脚都是新的，它生长着。</p><p>春天像小姑娘，花枝招展的，笑着，走着。</p><p>春天像健壮的青年，有铁一般的胳膊和腰脚，他领着我们上前去。</p><ol><li>有序列表</li><li>有序</li><li>有</li></ol><ul><li>无需列表</li><li>测试</li></ul><div class="note default icon flat"><p>default</p></div><div class="note primary icon flat"><p>primary</p></div><div class="note success icon flat"><p>success</p></div><div class="note info icon flat"><p>info</p></div><div class="note warning icon flat"><p>warning</p></div><div class="note danger icon flat"><p>danger</p></div><div class="note primary no-icon flat"><h4 id="Primary-HeaderWelcome-to-Hexo"><a href="#Primary-HeaderWelcome-to-Hexo" class="headerlink" title="Primary HeaderWelcome to Hexo!"></a>Primary Header<strong>Welcome</strong> to <a href="https://hexo.io/">Hexo!</a></h4></div><script>var article_container=document.getElementById("demo_style"),opt=document.getElementById("opt");article_container.addEventListener("click",function(e){var t=e.target;"DIV"===t.nodeName&&"bg_test"===t.className&&(web_bg.style.background=t.style.background,web_bg.style.animation=t.style.animation),Cookies.set("bg",t.style.background,{expires:1}),Cookies.set("animation",t.style.animation,{expires:1}),Cookies.set("type",t.getAttribute("data-type"),{expires:1})}),opt.addEventListener("click",function(e){var t=e.target;if("A"===t.nodeName){var a=t.getAttribute("data-opacity");if(a){Cookies.set("opacity",a,{expires:1});var n="--light_bg_color: rgb(255, 255, 255,"+a+");",i="--dark_bg_color: rgba(18,18,18,"+a+");";document.getElementById("content-inner").setAttribute("style",n+i)}}e.preventDefault()});</script>]]></content:encoded>
      
      
      
      
      <comments>https://imguojiahe.github.io/2022/05/06/text/#disqus_thread</comments>
      
    </item>
    
    <item>
      <title>Hello World</title>
      <link>https://imguojiahe.github.io/2022/05/05/hello-world/</link>
      <guid>https://imguojiahe.github.io/2022/05/05/hello-world/</guid>
      <pubDate>Thu, 05 May 2022 06:58:38 GMT</pubDate>
      
        
        
      <description>&lt;p&gt;这是本蒟蒻辛辛苦苦建出来的博客，希望在上面发一些关于编程和计算机的东西。&lt;/p&gt;
&lt;p&gt;这里写上我搭建这个博客按照的&lt;a href=&quot;https://zhuanlan.zhihu.com/p/102592286&quot;&gt;教程&lt;/a&gt;如果有需要的话大家可以看看~&lt;/p&gt;
</description>
        
      
      
      
      <content:encoded><![CDATA[<p>这是本蒟蒻辛辛苦苦建出来的博客，希望在上面发一些关于编程和计算机的东西。</p><p>这里写上我搭建这个博客按照的<a href="https://zhuanlan.zhihu.com/p/102592286">教程</a>如果有需要的话大家可以看看~</p>]]></content:encoded>
      
      
      
      
      <comments>https://imguojiahe.github.io/2022/05/05/hello-world/#disqus_thread</comments>
      
    </item>
    
  </channel>
</rss>
